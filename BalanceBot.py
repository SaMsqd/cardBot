import telebot
import sqlite3
from telebot import types

connect = sqlite3.connect(f'./data.db', check_same_thread=False)
cursor = connect.cursor()
cursor.execute(f'create table Money(phone_number str, card_number int, balance_sber int,balance_partners int)')

bot = telebot.TeleBot('7147815324:AAHG2-wR52qQfwdHFZoKxMObvAI_6owVafM')


markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
m1 = types.KeyboardButton(text='–û—Å—Ç–∞—Ç–æ–∫')
m2 = types.KeyboardButton(text='–î—Ä—É–≥–æ–µ')
markup.add(m1, m2)

markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
m3 = types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—ã')
m4 = types.KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å 1 –∫–∞—Ä—Ç—É')
m5 = types.KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –≤—Å—ë')
m6 = types.KeyboardButton(text='–í—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã')
m7 = types.KeyboardButton(text='–û–±–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç—ã')
m8 = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
markup2.add(m3, m4, m5, m6, m7, m8)

markup4 = types.ReplyKeyboardMarkup(resize_keyboard=True)
m9 = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
markup4.add(m9)

markup5 = types.ReplyKeyboardMarkup(resize_keyboard=True)
m10 = types.KeyboardButton(text='–ù–∞–∑–∞–¥')
markup5.add(m10)

markup6 = types.ReplyKeyboardMarkup(resize_keyboard=True)
m11 = types.KeyboardButton(text='help')
markup6.add(m11)


def make_price_beautiful(price):  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—Å—Ç–∞–≤–¥–µ–Ω–∏—è —Ç–æ—á–µ–∫
    rl_price = list(str(price))
    rl_price.reverse()
    res = ""
    for i in range(len(rl_price)):
        if (i + 1) % 3 == 0:
            res += rl_price[i] + "."
        else:
            res += rl_price[i]
    if res[-1] == ".":
        res = res[:-1]
    return res[::-1]


@bot.message_handler()
def start(messege):
    if messege.text in ['/start']:
        bot.send_message(messege.chat.id,'–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø–æ –°–±–µ—Ä–±–∞–Ω–∫!\n\
–Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Å—á–∏—Ç–∞—Ç—å –ª–∏–º–∏—Ç—ã –ø–æ –∫–∞—Ä—Ç–∞–º –∏ –Ω–µ –∑–∞–ø—É—Ç–∞—Ç—å—Å—è.\n\
–ù–∞–∂–º–∏ "help", –ø—Ä–æ—á—Ç–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏ –Ω–∞—á–Ω–∏ —Ä–∞–±–æ—Ç—É!',reply_markup=markup6)
    elif messege.text in ['help']:
        bot.send_message(messege.chat.id, '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç:\n\
\n\
1Ô∏è‚É£ –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É¬ª\n\
\n\
2Ô∏è‚É£ –ö–æ–º–∞–Ω–¥–∞ "–ù–∞ –∫–∞–∫–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∏—Ä–ø–µ–π –∏–ª–∏ —Å–±–µ—Ä–ø–µ–π\n\
\n\
–í—ã –º–æ–∂–µ—Ç–µ –≤–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ/–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ —Å–∏–º–≤–æ–ª—ã)\n\
\n\
3Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ 4 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –∫–∞—Ä—Ç—ã\n\
\n\
–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–ø–∏—à–∏—Ç–µ 4 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ\n\
\n\
–§–æ—Ä–º–∞—Ç:\n\
1111\n\
2222\n\
3333\n\
–∏ —Ç–¥.\n\
\n\
üî• P.S. –ö–∞—Ä—Ç–∞ –¥–æ–±–∞–≤–∏—Ç—å—Å—è —Å –ª–∏–º–∏—Ç–∞–º–∏ 500.000 –Ω–∞ —Å–±–µ—Ä–±–∞–Ω–∫–µ –∏ –±–∞–Ω–∫–∞—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö\n\
\n\
‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–µ:\n\
\n\
–ö–æ–º–∞–Ω–¥—É –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É\n\
\n\
–ö–æ–º–∞–Ω–¥–∞:\n\
¬´–ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –∫–∞—Ä—Ç—ã¬ª ¬´–ø—Ä–æ–±–µ–ª¬ª ¬´s / p¬ª ¬´–ø—Ä–æ–±–µ–ª¬ª ¬´—Å—É–º–º–∞¬ª\n\
\n\
‚ÄºÔ∏è s - —Å–Ω—è—Ç–∏–µ —Å–æ –°–±–µ—Ä–±–∞–Ω–∫–∞\n\
‚ÄºÔ∏è p - —Å–Ω—è—Ç–∏–µ —Å –±–∞–Ω–∫–æ–≤ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤\n\
\n\
–§–æ—Ä–º–∞—Ç:\n\
1111 s 10000\n\
2222 p 500000', reply_markup=markup)

    elif messege.text in ['–ù–∞–∑–∞–¥']:
        bot.send_message(messege.chat.id, '–£—Å–ø–µ—à–Ω–æ', reply_markup=markup)

    elif messege.text in ['–î—Ä—É–≥–æ–µ']:
        bot.send_message(messege.chat.id, '–£—Å–ø–µ—à–Ω–æ', reply_markup=markup2)

    elif messege.text in ['–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—ã']:
        mesg = bot.send_message(messege.chat.id, f'–ù–∞ –∫–∞–∫–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?:')
        bot.register_next_step_handler(mesg, what_cards_number)

    elif messege.text in ['–£–¥–∞–ª–∏—Ç—å –≤—Å—ë']:
        mesg = bot.send_message(messege.chat.id, f'–ù–∞–ø–∏—à–∏—Ç–µ "Yes" –µ—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —ç–ª–ª–µ–º–µ–Ω—Ç—ã',
                                reply_markup=markup4)  # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        bot.register_next_step_handler(mesg, are_you_shure)

    elif messege.text in ['–£–¥–∞–ª–∏—Ç—å 1 –∫–∞—Ä—Ç—É']:
        mesg = bot.send_message(messege.chat.id, f'–ù–∞–ø–∏—à–∏—Ç–µ 4 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –∫–∞—Ä—Ç—ã –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å')
        bot.register_next_step_handler(mesg, delete)

    elif messege.text in ['–û—Å—Ç–∞—Ç–æ–∫']:
        cursor.execute(f'select distinct(phone_number) from Money')
        test = cursor.fetchall()
        markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for elem in test:
            markup3.add(types.KeyboardButton(text=str(elem[0])))
        markup3.add(types.KeyboardButton(text='–ù–∞–∑–∞–¥'))
        mesg = bot.send_message(messege.chat.id, f'–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å',
                                reply_markup=markup3)
        bot.register_next_step_handler(mesg, view)

    elif messege.text in ['–û–±–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç—ã']:
        cursor.execute(f'select distinct(phone_number) from Money')
        test = cursor.fetchall()
        markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for elem in test:
            markup3.add(types.KeyboardButton(text=str(elem[0])))
        markup3.add(types.KeyboardButton(text='–ù–∞–∑–∞–¥'))
        mesg = bot.send_message(messege.chat.id,
                                f'–ü–æ –∫–∞–∫–æ–π –∫–∞—Ä—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã?',
                                reply_markup=markup3)  # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞ –ª–∏–º–∏—Ç–æ–≤
        bot.register_next_step_handler(mesg, shure_apdate_limites)

    elif messege.text in ['–í—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã']:
        cursor.execute(f'select distinct(phone_number) from Money')
        test = cursor.fetchall()
        for elem in test:
            bot.send_message(messege.chat.id, f'{elem[0]}')

    else:
        text = messege.text.split(' ')  # text = [–Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã , –±–∞–Ω–∫ , —Å—É–º–º–∞]
        if len(text) != 3:
            bot.send_message(messege.chat.id, f'–í—ã –≤–≤–µ–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É\n–ù–∞–ø–∏—à–∏—Ç–µ "help" –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏')
        elif text[1] not in 'SsPp–°—Å–ü–ø':
            bot.send_message(messege.chat.id, f'–í–≤–µ–¥—ë–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –±–∞–Ω–∫')
        else:
            if text[1] in 'Ss–°—Å':
                bank = 'balance_sber'
            elif text[1] in 'Pp–ü–ø':
                bank = 'balance_partners'
            cursor.execute(f'select {bank} from Money where card_number = "{text[0]}"')
            card = cursor.fetchone()
            if card != None:
                cursor.execute(f'update Money set {bank} = {int(card[0]) - int(text[2])} where card_number = {text[0]}')
                connect.commit()
                bot.send_message(messege.chat.id, f'–û—Å—Ç–∞—Ç–æ–∫ –ø–æ –∫–∞—Ä—Ç–µ: {make_price_beautiful(int(card[0]) - int(text[2]))}',reply_markup=markup)
            else:
                bot.send_message(messege.chat.id, f'–¢–∞–∫–æ–π –∫–∞—Ä—Ç—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')


def what_cards_number(messege): # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—å - 1
    global phone_number
    phone_number = messege.text  # –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    mesg = bot.send_message(messege.chat.id, f'–í–≤–µ–¥–∏—Ç–µ 4 –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ')
    bot.register_next_step_handler(mesg, add_cards)


def add_cards(messege):        # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—å - 2
    global markup
    k = 0  # —Å—á—ë—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç
    global card_numbers
    card_numbers = messege.text.split('\n')  # –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç
    for card_number in card_numbers:  # –ø–æ–æ—á–µ—Ä—ë–¥–Ω–æ–µ –≤–Ω–µ—Å–µ–Ω–∏–µ –∫–∞—Ä—Ç
        cursor.execute(f'select * from Money where card_number = "{card_number}"')
        test = cursor.fetchall()
        if card_number.isdigit():  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ
            if test == []:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
                cursor.execute(f'insert into Money values("{phone_number}","{card_number}",500000,500000)')
                connect.commit()
                k += 1
            else:
                bot.send_message(messege.chat.id,
                                 f'–ö–∞—Ä—Ç–∞ {card_number} —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É –≤ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä:{test[0][0]}')
        else:
            mesg = bot.send_message(messege.chat.id, f'{card_number} - —ç—Ç–æ –Ω–µ –º–æ–∂–µ—Ç —è–≤–ª—è—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∫–∞—Ä—Ç—ã')
    bot.send_message(messege.chat.id, f'–£—Å–ø–µ—à–Ω–æ {k}/{len(card_numbers)}',reply_markup=markup)


def are_you_shure(messege):        #—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥—è–ª–µ–Ω–∏—è –≤—Å–µ—Ö —ç–ª–ª–µ–º–µ–Ω—Ç–æ–≤
    if messege.text == 'Yes':
        cursor.execute(f'delete from Money')
        connect.commit()
        bot.send_message(messege.chat.id, f'–£—Å–ø–µ—à–Ω–æ',reply_markup=markup)
    elif messege.text == '–ù–∞–∑–∞–¥':
        bot.send_message(messege.chat.id, f'–í–æ—Ç –∏ —Å–ª–∞–≤–Ω–µ–Ω—å–∫–æ', reply_markup=markup)


def delete(messege):  #—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —ç–¥–µ–º–µ–Ω—Ç–∞
    cursor.execute(f'select * from Money where card_number = "{messege.text}"')
    test = cursor.fetchall()
    if test != []:
        cursor.execute(f'delete from Money where card_number = {messege.text}')
        connect.commit
        bot.send_message(messege.chat.id, f'–£—Å–ø–µ—à–Ω–æ', reply_markup=markup)
    else:
        bot.send_message(messege.chat.id, f'–¢–∞–∫–æ–π –∫–∞—Ä—Ç—ã –Ω–µ—Ç –≤ –±–∞–∑–µ', reply_markup=markup)


def view(messege): # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—Å—Ç–∞—Ç–∫–∞
    cursor.execute(
        f'select * from Money where phone_number = "{messege.text}"')  # –ø–æ–ª—É—á–∞–µ–º –≤—Å—é –∏–Ω—Ñ—É –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ç–µ–ª–µ—Ñ–æ–Ω—É
    test = cursor.fetchall()
    if messege.text != '–ù–∞–∑–∞–¥':
        if test == []:
            bot.send_message(messege.chat.id, f'–ù–∞ —ç—Ç–æ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç—ã', reply_markup=markup)
        else:
            bot.send_message(messege.chat.id, f'<b>–ë–∞–ª–∞–Ω—Å</b>', parse_mode='html',
                             reply_markup=markup)
            for elem in test:
                if elem[2] == elem[3] == 500000:
                    smile = '‚úÖ'
                elif elem[2] == elem[3] == 0:
                    smile = 'üÖæÔ∏è'
                else:
                    smile = 'üü°'
                bot.send_message(messege.chat.id, f'{smile} <b>{elem[1]}</b> | s - {make_price_beautiful(elem[2])} | p - {make_price_beautiful(elem[3])}', parse_mode='html')
    else:
        bot.send_message(messege.chat.id,f'–£—Å–ø–µ—à–Ω–æ',reply_markup=markup)


def shure_apdate_limites(messege): # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤
    cursor.execute(f'update Money set balance_sber = 500000 where phone_number = "{messege.text}"')
    cursor.execute(f'update Money set balance_partners = 500000 where phone_number = "{messege.text}"')
    bot.send_message(messege.chat.id, f'–£—Å–ø–µ—à–Ω–æ', reply_markup=markup)



if __name__ == '__main__':
    bot.infinity_polling(none_stop=True)